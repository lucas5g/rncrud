{"version":3,"sources":["src/context/UserContext.tsx","src/data/users.ts","src/views/UserList.tsx","src/views/UserForm.tsx","src/views/Test.tsx","App.tsx"],"names":["initialState","users","id","name","email","avatar","UserContext","createContext","actions","createUser","state","action","user","payload","parseInt","Math","random","updateUser","updated","map","u","deleteUser","filter","UserProvider","children","useReducer","fn","type","dispatch","Provider","value","UserList","navigation","useContext","View","FlatList","keyExtractor","toString","data","renderItem","item","key","bottomDivider","onPress","navigate","source","Content","Title","Subtitle","size","color","Platform","OS","Alert","alert","text","console","warn","window","confirm","handlerDelete","UserForm","route","useState","params","setUser","Text","TextInput","style","input","onChangeText","placeholder","Button","title","goBack","StyleSheet","create","form","height","borderColor","borderWidth","marginBottom","list","avatar_url","subtitle","Test","l","i","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","screenOptions","Screen","component","options","headerRight","icon","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight"],"mappings":"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","file":"static/js/app.a4a5d811.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\nimport { useReducer } from \"react\";\nimport { Text, View } from \"react-native\";\n\nimport users from '../data/users'\nconst initialState = {users}\n\nconst UserContext = createContext({})\n\nconst actions = {\n  createUser(state, action){\n    const user = action.payload \n    user.id = parseInt(Math.random() * 100)\n    // console.log({user})\n    // return state\n\n    return{\n      ...state,\n      users: [...state.users, user]\n    }\n  },\n\n  updateUser(state, action) {\n    const updated = action.payload \n    return {\n      ...state,\n      users: state.users.map( u => u.id === updated.id ? updated:u )\n    }\n  },\n  deleteUser(state, action){\n    const user = action.payload\n    return {\n      ...state, \n      users: state.users.filter(u => u.id !== user.id)\n    }\n  },\n\n}\n\nexport const UserProvider = ({ children }: any) => {\n\n  function reducer(state, action) {\n    const fn = actions[action.type]\n    return fn ? fn(state, action):state\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <UserContext.Provider value={{state, dispatch }}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n\n\nexport default UserContext","export default [\n  {\n    id: 1,\n    name: 'João Silva',\n    email: 'josil@empmail.com',\n    avatar: 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png'\n\n  },\n  {\n    id: 2,\n    name: 'Paulo Silva',\n    email: 'josil@empmail.com',\n    avatar: 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png'\n\n  },\n  {\n    id: 3,\n    name: 'Pedro Silva',\n    email: 'josil@empmail.com',\n    avatar: 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png'\n\n  },\n  {\n    id: 4,\n    name: 'Marcos Silva',\n    email: 'josil@empmail.com',\n    avatar: 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png'\n\n  }\n]","import React from 'react'\nimport { useContext } from 'react'\nimport { View, Text, FlatList, Alert, Platform } from 'react-native'\nimport { Button, ListItem, Avatar, Icon } from 'react-native-elements'\nimport UserContext from '../context/UserContext'\n// import {} from 'element'\n// import users from '../data/users'\n\ninterface User {\n  avatar: string\n  name: string\n  email: string,\n  id: number\n}\n\nexport const UserList = ({ navigation }: any) => {\n\n const {state, dispatch}:any =   useContext(UserContext)\n//  const {users} = state\n  function getActions(user: User) {\n    return (\n      <Button\n\n      />\n    )\n  }\n  \n  function handlerDelete(user){\n\n    const deleteUser = () => {\n      dispatch({\n        type: 'deleteUser',\n        payload: user, \n      })\n    }\n\n    if(Platform.OS === 'web'){\n      const confirm = window.confirm('Deseja excluir o usuário')\n      if(confirm) {\n        deleteUser()\n        window.alert('Usuário deleteado')\n      }\n      return\n    }\n    Alert.alert('Excluir Usuário', 'Deseja excluir o usuário?', [\n\n      {\n        text: 'Sim',\n        onPress(){\n          deleteUser()\n          console.warn('delete', {user})\n        }\n        \n      },\n      {\n\n        text: 'Não'\n      }\n    ])\n  }\n  function getUserItem({ item: user }: User) {\n    return (\n      <ListItem key={user.id}\n\n        bottomDivider\n        onPress={() => navigation.navigate('UserForm', user)}\n      >\n        <Avatar source={user.avatar} />\n        <ListItem.Content>\n          <ListItem.Title>{user.name}</ListItem.Title>\n          <ListItem.Subtitle>{user.email}</ListItem.Subtitle>\n        </ListItem.Content>\n        <Icon name='edit'\n          size={25}\n          color='orange'\n          onPress={() => navigation.navigate('UserForm', user)}\n        />\n        <Icon name='delete'\n          size={25}\n          color='red'\n          onPress={() => handlerDelete(user)}\n        />\n      </ListItem>\n\n    )\n  }\n\n  return (\n    <View>\n      <FlatList\n        keyExtractor={user => user.id.toString()}\n        data={state.users}\n        renderItem={getUserItem}\n      />\n\n    </View>\n  )\n}","import React from 'react'\nimport { useContext } from 'react'\nimport { useState } from 'react'\nimport { Text, TextInput, View, StyleSheet, Button } from 'react-native'\nimport UserContext from '../context/UserContext'\n\nexport const UserForm = ({ route, navigation }) => {\n  // useState(route.params ? route.params :{})\n\n  const {dispatch} = useContext(UserContext)\n\n  const [user, setUser] = useState(route.params ? route.params : {})\n  return (\n    <View>\n      <Text>Name</Text>\n      <TextInput\n        style={style.input}\n        onChangeText={name => setUser({ ...user, name })}\n        placeholder='Informe o Nome'\n        value={user.name}\n      />\n       <Text>E-mail</Text>\n      <TextInput\n        style={style.input}\n        onChangeText={email => setUser({ ...user, email })}\n        placeholder='Informe o E-mail'\n        value={user.email}\n      />\n       <Text>Avatar</Text>\n      <TextInput\n        style={style.input}\n        onChangeText={avatar => setUser({ ...user, avatar })}\n        placeholder='Informe a URL do Avatar'\n        value={user.avatar}\n      />\n\n      <Button \n        title='Salvar'\n        onPress={() => {\n          dispatch({\n            type: user.id ? 'updateUser': 'createUser',\n            payload: user\n          })\n          navigation.goBack()\n\n        }}\n      />\n    </View>\n    \n  )\n}\n\nconst style = StyleSheet.create({\n  form: {\n\n  },\n  input: {\n    height: 40,\n    borderColor: 'grey',\n    borderWidth: 1,\n    marginBottom: 10\n  }\n})","import React from 'react'\nimport { View } from 'react-native'\nimport { ListItem, Avatar, Button, Icon } from 'react-native-elements'\n\nconst list = [\n  {\n    name: 'Amy Farha',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: 'Vice President'\n  },\n  {\n    name: 'Chris Jackson',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: 'Vice Chairman'\n  },\n]\n\nexport const Test = () => {\n  return (\n\n    <View>\n\n      {list.map((l, i) => (\n\n        <ListItem>\n          <Icon name={'info'} />\n          <ListItem.Content>\n            <ListItem.Title>{l.name}</ListItem.Title>\n            <ListItem.Subtitle>{l.subtitle}</ListItem.Subtitle>\n          </ListItem.Content>\n          <Icon name='delete' />\n          </ListItem>\n      ))}\n    </View>\n\n  )\n}\n","import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { UserList } from './src/views/UserList';\nimport { UserForm } from './src/views/UserForm';\nimport { Button, Icon } from 'react-native-elements'\nimport { Test } from './src/views/Test';\nimport { UserProvider } from './src/context/UserContext';\n\nconst Stack = createStackNavigator()\nexport default function App() {\n  return (\n    <UserProvider>\n\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName='UserList'\n          screenOptions={screenOptions}\n        >\n          <Stack.Screen\n\n            name='UserList'\n            component={UserList}\n            options={({ navigation }) => {\n              return {\n                title: 'Lista de Usuários - crud',\n                headerRight: () => (\n                  <Button\n                    onPress={() => navigation.navigate('UserForm')}\n                    type='clear'\n                    icon={<Icon name='add' size={25} color='white' />}\n                  />\n                )\n\n              }\n\n            }}\n          />\n          <Stack.Screen\n            name='UserForm'\n            component={UserForm}\n            options={{\n              title: 'Formulário de Usuários'\n            }}\n          />\n          <Stack.Screen\n            name='Test'\n            component={Test}\n            options={{\n              title: 'Formulário de Usuários'\n            }}\n          />\n\n        </Stack.Navigator>\n      </NavigationContainer>\n    </UserProvider>\n  );\n}\n\nconst screenOptions = {\n  headerStyle: {\n    backgroundColor: '#f4511e',\n\n  },\n  headerTintColor: '#fff',\n  headerTitleStyle: {\n    fontWeight: 'bold'\n  }\n\n}"],"sourceRoot":""}